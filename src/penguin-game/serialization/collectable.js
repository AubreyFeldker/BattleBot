"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.Collectable = void 0;
var flatbuffers = require("flatbuffers");
var Collectable = /** @class */ (function () {
    function Collectable() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Collectable.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Collectable.getRootAsCollectable = function (bb, obj) {
        return (obj || new Collectable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Collectable.getSizePrefixedRootAsCollectable = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Collectable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Collectable.prototype.collectableId = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    Collectable.startCollectable = function (builder) {
        builder.startObject(1);
    };
    Collectable.addCollectableId = function (builder, collectableIdOffset) {
        builder.addFieldOffset(0, collectableIdOffset, 0);
    };
    Collectable.endCollectable = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    Collectable.createCollectable = function (builder, collectableIdOffset) {
        Collectable.startCollectable(builder);
        Collectable.addCollectableId(builder, collectableIdOffset);
        return Collectable.endCollectable(builder);
    };
    return Collectable;
}());
exports.Collectable = Collectable;
